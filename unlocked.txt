#include <iostream>
#include <stdio.h>
#include <math.h>
#include <utility>
#include <algorithm>
#include <set>
#include <queue>
#include <vector>
#include <stack>
#include <map>
#include <stdlib.h>
using namespace std;
#define input(i)	scanf("%lld",&i);
 
long long int finput()
{
 int done;
 
 register int ch = getchar_unlocked();
 done = 0;
 for(;(ch<48 || ch>57);ch = getchar_unlocked())
  ;
 for(;ch>47 && ch<58;ch = getchar_unlocked()) 
 {
   done = (done<<1) + (done<<3) + ch - 48;
 }
 
 return done;
 
}
 
void foutput(long long int n)
{
    if(n==0)
    {
        putchar('0');
 
    }
    else{
        if(n < 0){
            putchar('-');
            n*=-1;
        }
        char temp[64];
        long long int sze=0;
        while(n > 0){
            temp[sze++]= '0' + n%10;
            n/=10;
        }
        for(long long int i=sze-1;i>=0;i--)
        {
            putchar(temp[i]);
        }
    }
}
 
 
long long int gcd(long long int a,long long int b)
{
	long long int temp;
 
	while(b!=0)
	{
		temp=b;
		b=a%b;
		a=temp;
	}
 
	return (a);
}
 
int  main()
{
	long long int t;
 
	t=finput();
 
	while(t--)
	{
		long long int n,q,i,l,r,frst,ans,index;
		vector<pair<long long int,long long int> >vct;
 
		n=finput();
		q=finput();
 
		for(i=0;i<n;i++)
		{
			frst=finput();
			vct.push_back(make_pair(frst,i));
		}
 
		//sort(vct.begin(),vct.begin()+n);
 
		while(q--)
		{
			input(l);
			l=l-1;
			input(r);
			r=r-1;
 
			int flag=0;
			for(i=0;i<n;i++)
			{
				index=vct[i].second;
 
				if(index < l || index > r)
				{
					
					//cout<<vct[i].first<<" : "<<index<<endl;
 
					if(flag==0)
					{
						ans=vct[i].first;
						flag=1;
 
						//cout<<"gcd1 :"<<ans<<endl;
					}
					else
					{
						ans=gcd(ans,vct[i].first);
						//cout<<"gcd2 :"<<ans<<endl;
					}
				}
				
			}
 
			foutput(ans);
			printf("\n");
		}
	}	
 
	return 0;
} 